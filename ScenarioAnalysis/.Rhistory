library("class", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("codetools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:codetools", unload=TRUE)
detach("package:class", unload=TRUE)
detach("package:boot", unload=TRUE)
v <- c(1,2,3)
v <- c(1,2,3)
names(v) <- c("a","b","c")
install.packages(c("class", "codetools"))
install.packages("survival")
install.packages("tidyverse")
install.packages(c("knitr", "gganimate", "idmodelr"))
install.packages("learnr")
install.packages(c("cpp11", "dplyr", "MASS", "mgcv", "nlme", "ps"))
install.packages("igraph")
library(tidyverse)
library(igraph)
dat <- read_table("ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = paste0(X3, X4),
to = paste0(X8, X9),
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
dat <- read_table("Users/Pit/GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = paste0(X3, X4),
to = paste0(X8, X9),
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
dat <- read_table("/GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = paste0(X3, X4),
to = paste0(X8, X9),
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
dat <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = paste0(X3, X4),
to = paste0(X8, X9),
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
View(dat)
ISTATCommutingData <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE)
ISTATCommutingData <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE)
View(ISTATCommutingData)
ProvincialMobility <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = X3,
to = X8,
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
View(ProvincialMobility)
ProvincialMobility %>%
group_by(from, to) %>%
summarise(tot_n = sum(n))
ProvincialMobility <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = X3,
to = X8,
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
ProvincialMobility %>%
group_by(from, to) %>%
summarise(tot_n = sum(n))
ProvincialMobility %>%
group_by(from, to) %>%
summarise(tot_n = sum(n))
ProvincialMobility %>%
group_by(from, to) %>%
summarise(tot_n = sum(n)) %>%
write.csv("GitHub/DigitalEpidemiologyProject/Data/CSV/ProvincialWeightedEdgeList.csv", row.names = FALSE)
ProvincialMobility <- read_table("GitHub/DigitalEpidemiologyProject/Data/TXT/ISTATCommutingData.txt",
col_names = FALSE) %>%
filter(X1=="S") %>%
mutate(from = as.numeric(X3),
to = as.numeric(X8),
n = as.numeric(X15)) %>%
filter(to != "000000")  %>%
select(from, to, n)
ProvincialMobility %>%
group_by(from, to) %>%
summarise(tot_n = sum(n)) %>%
write.csv("GitHub/DigitalEpidemiologyProject/Data/CSV/ProvincialWeightedEdgeList.csv", row.names = FALSE)
source('~/GitHub/DigitalEpidemiologyProject/Notebooks/CommutingMatrix.R')
source('~/GitHub/DigitalEpidemiologyProject/Notebooks/CommutingMatrix.R')
source('~/GitHub/DigitalEpidemiologyProject/Notebooks/CommutingMatrix.R')
source('~/GitHub/DigitalEpidemiologyProject/Notebooks/CommutingMatrix.R')
load ("Users/Pit/Desktop/contact_all.rdata")
load("/Users/Pit/Desktop/contact_all.rdata")
View(contact_all)
contact_all[["ITA"]]
write.csv(contact_all[["ITA"]], "/Users/Pit/GitHub/DigitalEpidemiologyProject/Data/CSV/2020/ContactMatrixAllLocations.csv")
install.packages(c("backports", "glue", "mgcv", "nlme", "tidyr", "vctrs"))
install.packages("patchwork")
install.packages(c("backports", "callr", "jsonlite", "MASS", "mgcv", "processx", "renv", "stringi", "vctrs", "xfun"))
install.packages("prettydoc")
install.packages("ICON")
devtools::install_github("ropenscilabs/icon")
install.packages("devtools")
devtools::install_github("ropenscilabs/icon")
install.packages("JuliaCall")
knitr::opts_chunk$set(message = FALSE, warning = FALSE, include = FALSE, eval = FALSE)
library(DT)
library(knitr)
library(tidyverse)
# Abstract
### Super-compact description, explanation
# Introduction
### Narrative stuff
# Research Questions / Goals / Objectives
### Geo-spatial scale exploration
### Diagnostic / Surveillance strategies portfolio exploration
### Contact-tracing app coverage exploration
# Data
## Geo-spatial (Provincial, NUTS3)
## Administrative (Provincial)
## Population (Age-stratified)
## Contact (Main locations)
## Mobility
## Epidemiological
## Diagnostic
# Graphs
## Proximity (Provincial)
## Contact Graphs
## Mobility Graphs
# Agents
## Structure
## Dynamics
# Model
## Epidemiological Module
## Structure
## Dynamics
## Surveillance Module
## Structure
## Dynamics
## Contact-Tracing Module
## Structure
## Dynamics
## Behavioral Module
## Structure
## Dynamics
# Results
### Diagnostic / Surveillance
### Epidemiological
### Decision-support system (trade-off analysis, Pareto front,...)
### Epistemic (Indirect) value vs. Mitigation/Containment/Control/Clinical(Direct) value tradeoff
# Limitations & Future Development / Extensions (What's Next?)
### Full phase space & parameter space exploration
### Add Behavioral module
### Computational framework development, serial & parallelized optimization (see C.R.)
### Apply SciML to ABMs
###
include_graphics("/Users/Pit/GitHub/DigitalEpidemiologyProject/Slides/figures/Administrative1.png")
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
install.packages(c("future", "globals", "knitr", "openssl", "survival", "tinytex", "withr", "xaringan", "xfun"))
<p align="center">
<iframe width="400" height="315" src="https://www.youtube.com/embed/dQT0gO4TQK8" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> <iframe width="400" height="315" src="https://www.youtube.com/embed/L1peXUQZLAI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</p>
## Appendix
install.packages(c("htmlwidgets", "igraph", "ps", "readr", "servr"))
install.packages(c("callr", "clipr", "igraph", "rlang"))
install.packages(c("callr", "cli", "cpp11", "DT", "furrr", "globals", "tibble"))
install.packages("gganimate")
remotes::install_github("mrc-ide/sircovid", upgrade = FALSE)
View(dat)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
install.packages(c("digest", "generics", "KernSmooth", "nlme", "R6", "testthat", "xfun"))
ITA1_agebands <- readRDS("~/GitHub/reestimate_covidIFR_analysis/data/derived/ITA1/ITA1_agebands.RDS")
View(ITA1_agebands)
library(readr)
age_summ_IFR <- read_csv("GitHub/reestimate_covidIFR_analysis/data/derived/age_summ_IFR.csv")
View(age_summ_IFR)
setwd("~/GitHub/inphyt.github.io/ScenarioAnalysis")
